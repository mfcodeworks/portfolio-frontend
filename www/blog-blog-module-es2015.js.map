{"version":3,"sources":["./src/app/blog/blog.module.ts","./src/app/blog/blog.routing.ts","./src/app/blog/pages/author/author.component.ts","./src/app/blog/pages/author/author.component.html","./src/app/blog/pages/post/post.component.ts","./src/app/blog/pages/post/post.component.html","./src/app/blog/pages/posts/posts.component.ts","./src/app/blog/pages/posts/posts.component.html","./src/app/blog/pages/search/search.component.ts","./src/app/blog/pages/search/search.component.html","./src/app/services/blog/blog.service.ts","./src/app/services/seo/seo.service.ts"],"names":[],"mappings":"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","file":"blog-blog-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PostsComponent } from './pages/posts/posts.component';\nimport { PostComponent } from './pages/post/post.component';\nimport { AuthorComponent } from './pages/author/author.component';\nimport { SearchComponent } from './pages/search/search.component';\nimport { BlogRoutingModule } from './blog.routing';\nimport { SharedModule } from '../shared/shared.module';\n\n@NgModule({\n  declarations: [\n    PostsComponent,\n    PostComponent,\n    AuthorComponent,\n    SearchComponent\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    BlogRoutingModule\n  ]\n})\nexport class BlogModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PostsComponent } from './pages/posts/posts.component';\nimport { AuthorComponent } from './pages/author/author.component';\nimport { SearchComponent } from './pages/search/search.component';\nimport { PostComponent } from './pages/post/post.component';\n\nexport const routes: Routes = [\n    {\n        path: '',\n        children: [\n            {\n                path: '',\n                component: PostsComponent\n            },\n            {\n                path: 'category/:category',\n                component: SearchComponent\n            },\n            {\n                path: 'tag/:tag',\n                component: SearchComponent\n            },\n            {\n                path: 'article/:slug',\n                component: PostComponent\n            },\n            {\n                path: 'author/:slug',\n                component: AuthorComponent\n            }\n        ]\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class BlogRoutingModule { }\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { AuthorGraphQL } from '../../../shared/core';\nimport { Observable } from 'rxjs';\nimport { BlogService } from '../../../services/blog/blog.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { map, switchMap, tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-author',\n  templateUrl: './author.component.html',\n  styleUrls: ['./author.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AuthorComponent {\n\n    // Get author\n    author: Observable<AuthorGraphQL> = this.router.paramMap.pipe(\n        map(m => m.get('slug')),\n        switchMap(s => this.blog.getBlogAuthor(s)),\n        map(({data}) => data.allAuthor[0]),\n        tap(console.log)\n    );\n\n    constructor(\n        private router: ActivatedRoute,\n        private blog: BlogService\n    ) { }\n\n}\n","<app-navbar color='black'></app-navbar>\n\n<section class='section'>\n    <div class='container'>\n        <div class='columns is-centered'>\n            <div class='column is-three-fifths'>\n                <article class='card' *ngIf='author | async; let a'>\n                    <div class=\"card-content\">\n                        <div class=\"media\">\n                            <div class=\"media-left\">\n                                <figure class=\"image\">\n                                    <img class='avatar' [src]=\"a.image?.asset.url\" [alt]=\"a.name\">\n                                </figure>\n                            </div>\n                            <div class=\"media-content\">\n                                <p class=\"title is-4\">{{ a.name }}</p>\n                                <!-- <p class=\"subtitle is-6\">@johnsmith</p> -->\n                            </div>\n                        </div>\n\n                        <div class=\"content\">\n                            <app-block [block]='a.bioRaw'></app-block>\n                        </div>\n                    </div>\n                </article>\n            </div>\n        </div>\n    </div>\n</section>","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { DomSanitizer, SafeUrl, SafeResourceUrl } from '@angular/platform-browser';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { map, switchMap, tap } from 'rxjs/operators';\nimport { BlogService } from '../../../services/blog/blog.service';\nimport { PostGraphQL } from '../../../shared/core';\nimport { SEOService } from '../../../services/seo/seo.service';\n\n@Component({\n    selector: 'app-post',\n    templateUrl: './post.component.html',\n    styleUrls: ['./post.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PostComponent {\n    previewURL: BehaviorSubject<SafeResourceUrl> = new BehaviorSubject('');\n    post: Observable<PostGraphQL> = this.router.paramMap.pipe(\n        map(m => m.get('slug')),\n        switchMap(s => this.blog.getBlogPost(s)),\n        map(({data}) => data.allPost[0]),\n        tap((p: PostGraphQL) => {\n            this.seo.setTitle(p.title);\n            this.seo.setDescription(p.excerpt);\n            this.seo.setMetaImage(p.mainImage.asset.url);\n        }),\n        tap((p: PostGraphQL) => this.previewURL.next(this.sanitizer.bypassSecurityTrustResourceUrl(p.preview)))\n    );\n\n    constructor(\n        private blog: BlogService,\n        private router: ActivatedRoute,\n        private seo: SEOService,\n        private sanitizer: DomSanitizer\n    ) { }\n\n}\n","<app-navbar color='black'></app-navbar>\n\n<article *ngIf='post | async; let p'>\n    <div class='content'>\n        <nav class=\"breadcrumb\" aria-label=\"breadcrumbs\">\n            <ul>\n                <li class='first-bread-margin'><a [routerLink]=\"['/', 'blog']\">Blog</a></li>\n                <li><a [routerLink]=\"['/', 'blog', 'category', p.categories[0].title]\">{{ p.categories[0].title }}</a></li>\n                <li class=\"is-active\"><a href=\"#\" aria-current=\"page\">{{ p.title }}</a></li>\n            </ul>\n        </nav>\n    </div>\n\n    <section class='section' id='title'>\n        <div class='columns is-centered'>\n            <div class='column is-half'>\n                <h1 class='title is-2'>\n                    {{ p.title }}\n                </h1>\n                <div class=\"media\">\n                    <div class=\"media-left\">\n                        <a [routerLink]='[\"/\", \"blog\", \"author\", p.author.slug.current]'>\n                            <figure class=\"image\">\n                                <img class='avatar'\n                                    [src]=\"p.author.image.asset.url + '?w=100'\"\n                                    [alt]=\"p.author.name\">\n                            </figure>\n                        </a>\n                    </div>\n                    <div class=\"media-content\">\n                        <p>\n                            <a class='title is-6' [routerLink]='[\"/\", \"blog\", \"author\", p.author.slug.current]'>\n                                {{ p.author.name }}\n                            </a>\n                            <br />\n                            <time class=\"subtitle is-6\" [dateTime]=\"p.publishedAt\">\n                                {{ p.publishedAt | date:'medium' }}\n                            </time>\n                        </p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </section>\n\n    <div class='content' id='tag-container'>\n        <div class='columns is-centered'>\n            <div class='column is-half'>\n                <a class='subtitle is-7 has-text-grey'\n                    *ngFor='let t of p.tags; let i = index'\n                    [routerLink]=\"['tag', t.slug.current]\">\n                    {{ t.title | titlecase }}<ng-container *ngIf='i < (p.tags.length-1)'>,</ng-container>\n                </a>\n            </div>\n        </div>\n    </div>\n\n    <section class=\"hero is-fullwidth has-background\">\n        <img class=\"hero-background is-transparent\"\n            [alt]=\"p.title\"\n            [src]=\"p.mainImage.asset.url\" />\n    </section>\n\n    <section class='section'>\n        <div class=\"columns is-centered\">\n            <div class='column is-three-fifths'>\n                <app-block [block]='p.bodyRaw'></app-block>\n            </div>\n        </div>\n    </section>\n\n    <section class='section'>\n        <div class=\"columns is-centered\">\n            <div class='column is-fullwidth'>\n                <div class='box'>\n                    <h4 class='title is-4'>Preview</h4>\n                    <iframe *ngIf='p.preview' class='preview-frame' [src]='previewURL | async' [title]='p.title'></iframe>\n                </div>\n            </div>\n        </div>\n    </section>\n</article>","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { BlogService } from '../../../services/blog/blog.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { map, switchMap, share } from 'rxjs/operators';\nimport { PostGraphQL, CategoryGraphQL, TagGraphQL } from '../../../shared/core';\nimport { Observable } from 'rxjs';\n\n@Component({\n    selector: 'app-posts',\n    templateUrl: './posts.component.html',\n    styleUrls: ['./posts.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PostsComponent {\n\n    // Consolidate page data\n    pageData: Observable<any> = this.router.queryParamMap.pipe(\n        map(m => parseInt(m.get('page') || '1')),\n        switchMap(p => this.blog.getBlogPosts(10 * --p)),\n        share()\n    );\n\n    // Get blog posts\n    posts: Observable<PostGraphQL[]> = this.pageData.pipe(map(({data}) => data.allPost));\n\n    // Fetch categories and tags\n    categories: Observable<CategoryGraphQL[]> = this.pageData.pipe(map(({data}) => data.allCategory));\n    tags: Observable<TagGraphQL[]> = this.pageData.pipe(map(({data}) => data.allTags));\n\n    constructor(\n        private blog: BlogService,\n        private router: ActivatedRoute\n    ) { }\n\n}\n","<app-navbar color='black'></app-navbar>\n\n<section class='section'>\n    <div class='container'>\n        <h1 class='title is-8'>Latest Articles</h1>\n\n        <div class='columns is-centered'>\n            <div class='column is-one-fifth'>\n                <aside class='menu'>\n                    <p class='menu-label'>Categories</p>\n                    <ul class='menu-list'>\n                        <li *ngFor='let c of categories | async'>\n                            <a [routerLink]=\"['category', c.title]\">{{ c.title }}</a>\n                        </li>\n                    </ul>\n                    <p class='menu-label is-hidden-mobile'>Tags</p>\n                    <ul class='menu-list is-hidden-mobile'>\n                        <li *ngFor='let t of tags | async'>\n                            <a [routerLink]=\"['tag', t.slug.current]\">{{ t.title | titlecase }}</a>\n                        </li>\n                    </ul>\n                </aside>\n            </div>\n\n            <div class='column is-three-fifths'>\n                <article class='card' *ngFor='let p of posts | async'>\n                    <div class='card-image'>\n                        <a [routerLink]=\"['article', p.slug.current]\">\n                            <figure class='image'>\n                                <img class='post-media' [src]='p.mainImage.asset.url + \"?h=500\"' [alt]='p.title'>\n                            </figure>\n                        </a>\n                    </div>\n\n                    <div class=\"card-content\">\n                        <div class=\"media\">\n                            <div class=\"media-content\">\n                                <p>\n                                    <a class=\"title is-4 split-text\" [routerLink]=\"['article', p.slug.current]\">\n                                        <span>{{ p.title }}</span>\n                                        <i class=\"fas fa-arrow-right\"></i>\n                                    </a>\n                                </p>\n                                <p>\n                                    <a class=\"subtitle is-6\" [routerLink]=\"['author', p.author.slug.current]\">\n                                        {{ p.author.name }}\n                                    </a>\n                                </p>\n                            </div>\n                        </div>\n\n                        <div class=\"content\">\n                            <p class='subtitle is-6'>\n                                {{ p.excerpt }}\n                                <br />\n                            </p>\n                            <time class='subtitle is-6' [dateTime]=\"p.publishedAt\">\n                                {{ p.publishedAt | date:'mediumDate' }}\n                            </time>\n                            <br /><br />\n                            <p>\n                                <a class='subtitle is-7 has-text-grey' *ngFor='let t of p.tags; let i = index' [routerLink]=\"['tag', t.slug.current]\">\n                                    {{ t.title | titlecase }}<ng-container *ngIf='i < (p.tags.length-1)'>,</ng-container>\n                                </a>\n                            </p>\n                        </div>\n                    </div>\n                </article>\n            </div>\n\n            <div class='column is-one-fifth'></div>\n        </div>\n    </div>\n</section>","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SearchComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>search works!</p>\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Apollo } from 'apollo-angular';\nimport { ApolloQueryResult } from 'apollo-client';\nimport { BlogPostsPage, BlogPostPage, BlogAuthorPage } from '../../shared/queries';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class BlogService {\n\n    constructor(private apollo: Apollo) { }\n\n    getBlogPosts(offset = 0, limit = 10): Observable<ApolloQueryResult<any>> {\n        return this.apollo.query<any>({\n            query: BlogPostsPage,\n            variables: {offset, limit}\n        });\n    }\n\n    getBlogPost(slug: string): Observable<ApolloQueryResult<any>> {\n        return this.apollo.query<any>({\n            query: BlogPostPage,\n            variables: {slug}\n        });\n    }\n\n    getBlogAuthor(slug: string): Observable<ApolloQueryResult<any>> {\n        return this.apollo.query<any>({\n            query: BlogAuthorPage,\n            variables: {slug}\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Title, Meta } from '@angular/platform-browser';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SEOService {\n\n    constructor(\n        private title: Title,\n        private meta: Meta\n    ) { }\n\n    setTitle(title: string): void {\n        this.title.setTitle(title);\n\n        this.meta.updateTag({\n            name: 'twitter:title',\n            content: title\n        }, `name='twitter:title'`);\n    }\n\n    setDescription(description: string): void {\n        this.meta.updateTag({\n            name: 'description',\n            content: description\n        }, `name='description'`);\n\n        this.meta.updateTag({\n            name: 'twitter:description',\n            content: description\n        }, `name='twitter:description'`);\n    }\n\n    setMetaImage(imageUrl: string): void {\n        this.meta.updateTag({\n            name: 'twitter:image',\n            content: imageUrl\n        }, `name='twitter:image'`);\n    }\n}\n"],"sourceRoot":"webpack:///"}