{"version":3,"sources":["webpack:///src/app/blog/blog.module.ts","webpack:///src/app/blog/blog.routing.ts","webpack:///src/app/blog/pages/author/author.component.ts","webpack:///src/app/blog/pages/author/author.component.html","webpack:///src/app/blog/pages/post/post.component.ts","webpack:///src/app/blog/pages/post/post.component.html","webpack:///src/app/blog/pages/posts/posts.component.ts","webpack:///src/app/blog/pages/posts/posts.component.html","webpack:///src/app/blog/pages/search/search.component.ts","webpack:///src/app/blog/pages/search/search.component.html","webpack:///src/app/services/blog/blog.service.ts","webpack:///src/app/services/seo/seo.service.ts"],"names":["BlogModule","declarations","imports","routes","path","children","component","BlogRoutingModule","forChild","exports","AuthorComponent","router","blog","author","paramMap","pipe","m","get","s","getBlogAuthor","data","allAuthor","console","log","selector","templateUrl","styleUrls","changeDetection","OnPush","PostComponent","seo","sanitizer","previewURL","post","getBlogPost","allPost","p","setTitle","title","setDescription","excerpt","setMetaImage","mainImage","asset","url","next","bypassSecurityTrustResourceUrl","preview","PostsComponent","pageData","queryParamMap","parseInt","getBlogPosts","posts","categories","allCategory","tags","allTags","SearchComponent","BlogService","apollo","offset","limit","query","variables","slug","providedIn","SEOService","meta","updateTag","name","content","description","imageUrl"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAsBaA,U;;;;;YAAAA;;;;yBAAAA,U;AAAU,O;AAAA,gBANZ,CACP,4DADO,EAEP,kEAFO,EAGP,+DAHO,CAMY;;;;0HAAVA,U,EAAU;AAAA,uBAXnB,2EAWmB,EAVnB,wEAUmB,EATnB,8EASmB,EARnB,8EAQmB;AARJ,kBAGf,4DAHe,EAIf,kEAJe,EAKf,+DALe;AAQI,O;AAHF,K;;;;;sEAGRA,U,EAAU;cAbtB,sDAasB;eAbb;AACRC,sBAAY,EAAE,CACZ,2EADY,EAEZ,wEAFY,EAGZ,8EAHY,EAIZ,8EAJY,CADN;AAORC,iBAAO,EAAE,CACP,4DADO,EAEP,kEAFO,EAGP,+DAHO;AAPD,S;AAaa,Q;;;;;;;;;;;;;;;;;;ACtBvB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAOO,QAAMC,MAAM,GAAW,CAC1B;AACIC,UAAI,EAAE,EADV;AAEIC,cAAQ,EAAE,CACN;AACID,YAAI,EAAE,EADV;AAEIE,iBAAS,EAAE;AAFf,OADM,EAKN;AACIF,YAAI,EAAE,oBADV;AAEIE,iBAAS,EAAE;AAFf,OALM,EASN;AACIF,YAAI,EAAE,UADV;AAEIE,iBAAS,EAAE;AAFf,OATM,EAaN;AACIF,YAAI,EAAE,eADV;AAEIE,iBAAS,EAAE;AAFf,OAbM,EAiBN;AACIF,YAAI,EAAE,cADV;AAEIE,iBAAS,EAAE;AAFf,OAjBM;AAFd,KAD0B,CAAvB;;QAgCMC,iB;;;;;YAAAA;;;;yBAAAA,iB;AAAiB,O;AAAA,gBAHjB,CAAC,6DAAaC,QAAb,CAAsBL,MAAtB,CAAD,CAGiB,EAFhB,4DAEgB;;;;0HAAjBI,iB,EAAiB;AAAA;AAAA,kBAFhB,4DAEgB;AAAA,O;AAFJ,K;;;;;sEAEbA,iB,EAAiB;cAJ7B,sDAI6B;eAJpB;AACNL,iBAAO,EAAE,CAAC,6DAAaM,QAAb,CAAsBL,MAAtB,CAAD,CADH;AAENM,iBAAO,EAAE,CAAC,4DAAD;AAFH,S;AAIoB,Q;;;;;;;;;;;;;;;;;;ACvC9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACMgB;;AACI;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AAAsB;;AAAY;;AAEtC;;AACJ;;AAEA;;AACI;;AACJ;;AACJ;;AACJ;;;;;;AAbwC;;AAAA,uLAA0B,KAA1B,EAA0B,SAA1B;;AAIF;;AAAA;;AAMf;;AAAA;;;;QDR1BC,e,GAUT,yBACYC,MADZ,EAEYC,IAFZ,EAE6B;AAAA;;AAAA;;AADjB,WAAAD,MAAA,GAAAA,MAAA;AACA,WAAAC,IAAA,GAAAA,IAAA,CAAiB,CAV7B;;AACA,WAAAC,MAAA,GAAoC,KAAKF,MAAL,CAAYG,QAAZ,CAAqBC,IAArB,CAChC,2DAAI,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAACC,GAAF,CAAM,MAAN,CAAJ;AAAA,OAAL,CADgC,EAEhC,iEAAU,UAAAC,CAAC;AAAA,eAAI,KAAI,CAACN,IAAL,CAAUO,aAAV,CAAwBD,CAAxB,CAAJ;AAAA,OAAX,CAFgC,EAGhC,2DAAI;AAAA,YAAEE,IAAF,QAAEA,IAAF;AAAA,eAAYA,IAAI,CAACC,SAAL,CAAe,CAAf,CAAZ;AAAA,OAAJ,CAHgC,EAIhC,2DAAIC,OAAO,CAACC,GAAZ,CAJgC,CAApC;AAUK,K;;;uBAbIb,e,EAAe,+H,EAAA,wI;AAAA,K;;;YAAfA,e;AAAe,iC;AAAA,c;AAAA,a;AAAA,8V;AAAA;AAAA;ACb5B;;AAEA;;AACI;;AACI;;AACI;;AACI;;;;AAmBJ;;AACJ;;AACJ;;AACJ;;;;AAtBsC;;AAAA;;;;;;;;;;;sEDOzBA,e,EAAe;cAN3B,uDAM2B;eANjB;AACTc,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,yBAAD,CAHF;AAITC,yBAAe,EAAE,sEAAwBC;AAJhC,S;AAMiB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEb5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACmD6C;;AAA4C;;AAAC;;;;;;;;;;AAH1E;;AAGI;;;;AAAyB;;AAC7B;;;;;;;;;AAFI;;AACA;;AAAA;;AAAuC;;AAAA;;;;;;AAyBvC;;;;;;;;;;AAAgD,iOAA0B,OAA1B,EAA0B,UAA1B;;;;;;;;;;;;;;;;;;AA1EpE;;AACI;;AACI;;AACI;;AACI;;AAA+B;;AAAgC;;AAAI;;AAAI;;AACvE;;AAAI;;AAAmE;;AAA2B;;AAAI;;AACtG;;AAAsB;;AAAgC;;AAAa;;AAAI;;AAC3E;;AACJ;;AACJ;;AAEA;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACI;;AAGJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACJ;;AACA;;AACA;;AACI;;;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AAEA;;AACI;;AACI;;AACI;;AAKJ;;AACJ;;AACJ;;AAEA;;AACI;;AAGJ;;AAEA;;AACI;;AACI;;AACI;;AACJ;;AACJ;;AACJ;;AAEA;;AACI;;AACI;;AACI;;AACI;;AAAuB;;AAAO;;AAC9B;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;AA3EkD;;AAAA;;AAC3B;;AAAA;;AAAgE;;AAAA;;AACjB;;AAAA;;AASlD;;AAAA;;AAIO;;AAAA;;AAGS;;AAAA,6KAA2C,KAA3C,EAA2C,gBAA3C;;AAOc;;AAAA;;AAClB;;AAAA;;AAGwB;;AAAA;;AACxB;;AAAA;;AAaZ;;AAAA;;AAUR;;AAAA,oFAAe,KAAf,EAAe,wBAAf,EAAe,2DAAf;;AAOe;;AAAA;;AAUC;;AAAA;;;;QD7DfC,a,GAcT,uBACYjB,IADZ,EAEYD,MAFZ,EAGYmB,GAHZ,EAIYC,SAJZ,EAImC;AAAA;;AAAA;;AAHvB,WAAAnB,IAAA,GAAAA,IAAA;AACA,WAAAD,MAAA,GAAAA,MAAA;AACA,WAAAmB,GAAA,GAAAA,GAAA;AACA,WAAAC,SAAA,GAAAA,SAAA;AAjBZ,WAAAC,UAAA,GAA+C,IAAI,oDAAJ,CAAoB,EAApB,CAA/C;AACA,WAAAC,IAAA,GAAgC,KAAKtB,MAAL,CAAYG,QAAZ,CAAqBC,IAArB,CAC5B,2DAAI,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAACC,GAAF,CAAM,MAAN,CAAJ;AAAA,OAAL,CAD4B,EAE5B,iEAAU,UAAAC,CAAC;AAAA,eAAI,MAAI,CAACN,IAAL,CAAUsB,WAAV,CAAsBhB,CAAtB,CAAJ;AAAA,OAAX,CAF4B,EAG5B,2DAAI;AAAA,YAAEE,IAAF,SAAEA,IAAF;AAAA,eAAYA,IAAI,CAACe,OAAL,CAAa,CAAb,CAAZ;AAAA,OAAJ,CAH4B,EAI5B,2DAAI,UAACC,CAAD,EAAoB;AACpB,cAAI,CAACN,GAAL,CAASO,QAAT,CAAkBD,CAAC,CAACE,KAApB;;AACA,cAAI,CAACR,GAAL,CAASS,cAAT,CAAwBH,CAAC,CAACI,OAA1B;;AACA,cAAI,CAACV,GAAL,CAASW,YAAT,CAAsBL,CAAC,CAACM,SAAF,CAAYC,KAAZ,CAAkBC,GAAxC;AACH,OAJD,CAJ4B,EAS5B,2DAAI,UAACR,CAAD;AAAA,eAAoB,MAAI,CAACJ,UAAL,CAAgBa,IAAhB,CAAqB,MAAI,CAACd,SAAL,CAAee,8BAAf,CAA8CV,CAAC,CAACW,OAAhD,CAArB,CAApB;AAAA,OAAJ,CAT4B,CAAhC;AAiBK,K;;;uBAnBIlB,a,EAAa,wI,EAAA,+H,EAAA,qI,EAAA,uI;AAAA,K;;;YAAbA,a;AAAa,+B;AAAA,c;AAAA,a;AAAA,0/B;AAAA;AAAA;ACf1B;;AAEA;;;;;;AAAS;;AAAA;;;;;;;;;;;sEDaIA,a,EAAa;cANzB,uDAMyB;eANf;AACPL,kBAAQ,EAAE,UADH;AAEPC,qBAAW,EAAE,uBAFN;AAGPC,mBAAS,EAAE,CAAC,uBAAD,CAHJ;AAIPC,yBAAe,EAAE,sEAAwBC;AAJlC,S;AAMe,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEf1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;ACWwB;;AACI;;AAAwC;;AAAa;;AACzD;;;;;;AADO;;AAAA;;AAAqC;;AAAA;;;;;;;;;;AAK5C;;AACI;;AAA0C;;;;AAAyB;;AACvE;;;;;;AADO;;AAAA;;AAAuC;;AAAA;;;;;;AA4CT;;AAA4C;;AAAC;;;;;;AAD1E;;AACI;;;;AAAyB;;AAC7B;;;;;;;;;AAF+E;;AAC3E;;AAAA;;AAAuC;;AAAA;;;;;;;;;;;;;;AArC3D;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACJ;;AACJ;;AAEA;;AACI;;AACI;;AACI;;AACI;;AACI;;AAAM;;AAAa;;AACnB;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACJ;;AACJ;;AACJ;;AACJ;;AAEA;;AACI;;AACI;;AACA;;AACJ;;AACA;;AACI;;;;AACJ;;AACA;;AAAM;;AACN;;AACI;;AAGJ;;AACJ;;AACJ;;AACJ;;;;;;AAxCW;;AAAA;;AAE6B;;AAAA,0KAAwC,KAAxC,EAAwC,UAAxC;;AASa;;AAAA;;AACvB;;AAAA;;AAKe;;AAAA;;AACrB;;AAAA;;AAQR;;AAAA;;AAGwB;;AAAA;;AACxB;;AAAA;;AAIuC;;AAAA;;;;QDhD1DoB,c,GAgBT,wBACYpC,IADZ,EAEYD,MAFZ,EAEkC;AAAA;;AAAA;;AADtB,WAAAC,IAAA,GAAAA,IAAA;AACA,WAAAD,MAAA,GAAAA,MAAA,CAAsB,CAhBlC;;AACA,WAAAsC,QAAA,GAA4B,KAAKtC,MAAL,CAAYuC,aAAZ,CAA0BnC,IAA1B,CACxB,2DAAI,UAAAC,CAAC;AAAA,eAAImC,QAAQ,CAACnC,CAAC,CAACC,GAAF,CAAM,MAAN,KAAiB,GAAlB,CAAZ;AAAA,OAAL,CADwB,EAExB,iEAAU,UAAAmB,CAAC;AAAA,eAAI,MAAI,CAACxB,IAAL,CAAUwC,YAAV,CAAuB,KAAK,EAAEhB,CAA9B,CAAJ;AAAA,OAAX,CAFwB,EAGxB,8DAHwB,CAA5B,CAekC,CATlC;;AACA,WAAAiB,KAAA,GAAmC,KAAKJ,QAAL,CAAclC,IAAd,CAAmB,2DAAI;AAAA,YAAEK,IAAF,SAAEA,IAAF;AAAA,eAAYA,IAAI,CAACe,OAAjB;AAAA,OAAJ,CAAnB,CAAnC,CAQkC,CANlC;;AACA,WAAAmB,UAAA,GAA4C,KAAKL,QAAL,CAAclC,IAAd,CAAmB,2DAAI;AAAA,YAAEK,IAAF,SAAEA,IAAF;AAAA,eAAYA,IAAI,CAACmC,WAAjB;AAAA,OAAJ,CAAnB,CAA5C;AACA,WAAAC,IAAA,GAAiC,KAAKP,QAAL,CAAclC,IAAd,CAAmB,2DAAI;AAAA,YAAEK,IAAF,SAAEA,IAAF;AAAA,eAAYA,IAAI,CAACqC,OAAjB;AAAA,OAAJ,CAAnB,CAAjC;AAKK,K;;;uBAnBIT,c,EAAc,wI,EAAA,+H;AAAA,K;;;YAAdA,c;AAAc,gC;AAAA,e;AAAA,a;AAAA,k4B;AAAA;AAAA;ACb3B;;AAEA;;AACI;;AACI;;AAAuB;;AAAe;;AAEtC;;AACI;;AACI;;AACI;;AAAsB;;AAAU;;AAChC;;AACI;;;;AAGJ;;AACA;;AAAuC;;AAAI;;AAC3C;;AACI;;;;AAGJ;;AACJ;;AACJ;;AAEA;;AACI;;;;AA2CJ;;AAEA;;AACJ;;AACJ;;AACJ;;;;AA9D4B;;AAAA;;AAMA;;AAAA;;AAQU;;AAAA;;;;;;;;;;;sEDZzBA,c,EAAc;cAN1B,uDAM0B;eANhB;AACPxB,kBAAQ,EAAE,WADH;AAEPC,qBAAW,EAAE,wBAFN;AAGPC,mBAAS,EAAE,CAAC,wBAAD,CAHJ;AAIPC,yBAAe,EAAE,sEAAwBC;AAJlC,S;AAMgB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEb3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQa8B,e;AAEX,iCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,e;AAAe,K;;;YAAfA,e;AAAe,iC;AAAA,c;AAAA,a;AAAA;AAAA;ACR5B;;AAAG;;AAAa;;;;;;;;;sEDQHA,e,EAAe;cAN3B,uDAM2B;eANjB;AACTlC,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,yBAAD,CAHF;AAITC,yBAAe,EAAE,sEAAwBC;AAJhC,S;AAMiB,Q;;;;;;;;;;;;;;;;;;;;AER5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASa+B,W;AAET,2BAAoBC,MAApB,EAAoC;AAAA;;AAAhB,aAAAA,MAAA,GAAAA,MAAA;AAAmB;;;;uCAEJ;AAAA,cAAtBC,MAAsB,uEAAb,CAAa;AAAA,cAAVC,KAAU,uEAAF,EAAE;AAC/B,iBAAO,KAAKF,MAAL,CAAYG,KAAZ,CAAuB;AAC1BA,iBAAK,EAAE,6DADmB;AAE1BC,qBAAS,EAAE;AAACH,oBAAM,EAANA,MAAD;AAASC,mBAAK,EAALA;AAAT;AAFe,WAAvB,CAAP;AAIH;;;oCAEWG,I,EAAY;AACpB,iBAAO,KAAKL,MAAL,CAAYG,KAAZ,CAAuB;AAC1BA,iBAAK,EAAE,4DADmB;AAE1BC,qBAAS,EAAE;AAACC,kBAAI,EAAJA;AAAD;AAFe,WAAvB,CAAP;AAIH;;;sCAEaA,I,EAAY;AACtB,iBAAO,KAAKL,MAAL,CAAYG,KAAZ,CAAuB;AAC1BA,iBAAK,EAAE,8DADmB;AAE1BC,qBAAS,EAAE;AAACC,kBAAI,EAAJA;AAAD;AAFe,WAAvB,CAAP;AAIH;;;;;;;uBAvBQN,W,EAAW,6G;AAAA,K;;;aAAXA,W;AAAW,eAAXA,WAAW,K;AAAA,kBAFR;;;;;sEAEHA,W,EAAW;cAHvB,wDAGuB;eAHZ;AACRO,oBAAU,EAAE;AADJ,S;AAGY,Q;;;;;;;;;;;;;;;;;;;;;;ACTxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAMaC,U;AAET,0BACY7B,KADZ,EAEY8B,IAFZ,EAEsB;AAAA;;AADV,aAAA9B,KAAA,GAAAA,KAAA;AACA,aAAA8B,IAAA,GAAAA,IAAA;AACP;;;;iCAEI9B,K,EAAa;AAClB,eAAKA,KAAL,CAAWD,QAAX,CAAoBC,KAApB;AAEA,eAAK8B,IAAL,CAAUC,SAAV,CAAoB;AAChBC,gBAAI,EAAE,eADU;AAEhBC,mBAAO,EAAEjC;AAFO,WAApB;AAIH;;;uCAEckC,W,EAAmB;AAC9B,eAAKJ,IAAL,CAAUC,SAAV,CAAoB;AAChBC,gBAAI,EAAE,aADU;AAEhBC,mBAAO,EAAEC;AAFO,WAApB;AAKA,eAAKJ,IAAL,CAAUC,SAAV,CAAoB;AAChBC,gBAAI,EAAE,qBADU;AAEhBC,mBAAO,EAAEC;AAFO,WAApB;AAIH;;;qCAEYC,Q,EAAgB;AACzB,eAAKL,IAAL,CAAUC,SAAV,CAAoB;AAChBC,gBAAI,EAAE,eADU;AAEhBC,mBAAO,EAAEE;AAFO,WAApB;AAIH;;;;;;;uBAjCQN,U,EAAU,uH,EAAA,sH;AAAA,K;;;aAAVA,U;AAAU,eAAVA,UAAU,K;AAAA,kBAFP;;;;;sEAEHA,U,EAAU;cAHtB,wDAGsB;eAHX;AACRD,oBAAU,EAAE;AADJ,S;AAGW,Q","file":"blog-blog-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PostsComponent } from './pages/posts/posts.component';\nimport { PostComponent } from './pages/post/post.component';\nimport { AuthorComponent } from './pages/author/author.component';\nimport { SearchComponent } from './pages/search/search.component';\nimport { BlogRoutingModule } from './blog.routing';\nimport { SharedModule } from '../shared/shared.module';\n\n@NgModule({\n  declarations: [\n    PostsComponent,\n    PostComponent,\n    AuthorComponent,\n    SearchComponent\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    BlogRoutingModule\n  ]\n})\nexport class BlogModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PostsComponent } from './pages/posts/posts.component';\nimport { AuthorComponent } from './pages/author/author.component';\nimport { SearchComponent } from './pages/search/search.component';\nimport { PostComponent } from './pages/post/post.component';\n\nexport const routes: Routes = [\n    {\n        path: '',\n        children: [\n            {\n                path: '',\n                component: PostsComponent\n            },\n            {\n                path: 'category/:category',\n                component: SearchComponent\n            },\n            {\n                path: 'tag/:tag',\n                component: SearchComponent\n            },\n            {\n                path: 'article/:slug',\n                component: PostComponent\n            },\n            {\n                path: 'author/:slug',\n                component: AuthorComponent\n            }\n        ]\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class BlogRoutingModule { }\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { AuthorGraphQL } from '../../../shared/core';\nimport { Observable } from 'rxjs';\nimport { BlogService } from '../../../services/blog/blog.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { map, switchMap, tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-author',\n  templateUrl: './author.component.html',\n  styleUrls: ['./author.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AuthorComponent {\n\n    // Get author\n    author: Observable<AuthorGraphQL> = this.router.paramMap.pipe(\n        map(m => m.get('slug')),\n        switchMap(s => this.blog.getBlogAuthor(s)),\n        map(({data}) => data.allAuthor[0]),\n        tap(console.log)\n    );\n\n    constructor(\n        private router: ActivatedRoute,\n        private blog: BlogService\n    ) { }\n\n}\n","<app-navbar color='black'></app-navbar>\n\n<section class='section'>\n    <div class='container'>\n        <div class='columns is-centered'>\n            <div class='column is-three-fifths'>\n                <article class='card' *ngIf='author | async; let a'>\n                    <div class=\"card-content\">\n                        <div class=\"media\">\n                            <div class=\"media-left\">\n                                <figure class=\"image\">\n                                    <img class='avatar' [src]=\"a.image?.asset.url\" [alt]=\"a.name\">\n                                </figure>\n                            </div>\n                            <div class=\"media-content\">\n                                <p class=\"title is-4\">{{ a.name }}</p>\n                                <!-- <p class=\"subtitle is-6\">@johnsmith</p> -->\n                            </div>\n                        </div>\n\n                        <div class=\"content\">\n                            <app-block [block]='a.bioRaw'></app-block>\n                        </div>\n                    </div>\n                </article>\n            </div>\n        </div>\n    </div>\n</section>","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { DomSanitizer, SafeUrl, SafeResourceUrl } from '@angular/platform-browser';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { map, switchMap, tap } from 'rxjs/operators';\nimport { BlogService } from '../../../services/blog/blog.service';\nimport { PostGraphQL } from '../../../shared/core';\nimport { SEOService } from '../../../services/seo/seo.service';\n\n@Component({\n    selector: 'app-post',\n    templateUrl: './post.component.html',\n    styleUrls: ['./post.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PostComponent {\n    previewURL: BehaviorSubject<SafeResourceUrl> = new BehaviorSubject('');\n    post: Observable<PostGraphQL> = this.router.paramMap.pipe(\n        map(m => m.get('slug')),\n        switchMap(s => this.blog.getBlogPost(s)),\n        map(({data}) => data.allPost[0]),\n        tap((p: PostGraphQL) => {\n            this.seo.setTitle(p.title);\n            this.seo.setDescription(p.excerpt);\n            this.seo.setMetaImage(p.mainImage.asset.url);\n        }),\n        tap((p: PostGraphQL) => this.previewURL.next(this.sanitizer.bypassSecurityTrustResourceUrl(p.preview)))\n    );\n\n    constructor(\n        private blog: BlogService,\n        private router: ActivatedRoute,\n        private seo: SEOService,\n        private sanitizer: DomSanitizer\n    ) { }\n\n}\n","<app-navbar color='black'></app-navbar>\n\n<article *ngIf='post | async; let p'>\n    <div class='content'>\n        <nav class=\"breadcrumb\" aria-label=\"breadcrumbs\">\n            <ul>\n                <li class='first-bread-margin'><a [routerLink]=\"['/', 'blog']\">Blog</a></li>\n                <li><a [routerLink]=\"['/', 'blog', 'category', p.categories[0].title]\">{{ p.categories[0].title }}</a></li>\n                <li class=\"is-active\"><a href=\"#\" aria-current=\"page\">{{ p.title }}</a></li>\n            </ul>\n        </nav>\n    </div>\n\n    <section class='section' id='title'>\n        <div class='columns is-centered'>\n            <div class='column is-half'>\n                <h1 class='title is-2'>\n                    {{ p.title }}\n                </h1>\n                <div class=\"media\">\n                    <div class=\"media-left\">\n                        <a [routerLink]='[\"/\", \"blog\", \"author\", p.author.slug.current]'>\n                            <figure class=\"image\">\n                                <img class='avatar'\n                                    [src]=\"p.author.image.asset.url + '?w=100'\"\n                                    [alt]=\"p.author.name\">\n                            </figure>\n                        </a>\n                    </div>\n                    <div class=\"media-content\">\n                        <p>\n                            <a class='title is-6' [routerLink]='[\"/\", \"blog\", \"author\", p.author.slug.current]'>\n                                {{ p.author.name }}\n                            </a>\n                            <br />\n                            <time class=\"subtitle is-6\" [dateTime]=\"p.publishedAt\">\n                                {{ p.publishedAt | date:'medium' }}\n                            </time>\n                        </p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </section>\n\n    <div class='content' id='tag-container'>\n        <div class='columns is-centered'>\n            <div class='column is-half'>\n                <a class='subtitle is-7 has-text-grey'\n                    *ngFor='let t of p.tags; let i = index'\n                    [routerLink]=\"['tag', t.slug.current]\">\n                    {{ t.title | titlecase }}<ng-container *ngIf='i < (p.tags.length-1)'>,</ng-container>\n                </a>\n            </div>\n        </div>\n    </div>\n\n    <section class=\"hero is-fullwidth has-background\">\n        <img class=\"hero-background is-transparent\"\n            [alt]=\"p.title\"\n            [src]=\"p.mainImage.asset.url\" />\n    </section>\n\n    <section class='section'>\n        <div class=\"columns is-centered\">\n            <div class='column is-three-fifths'>\n                <app-block [block]='p.bodyRaw'></app-block>\n            </div>\n        </div>\n    </section>\n\n    <section class='section'>\n        <div class=\"columns is-centered\">\n            <div class='column is-fullwidth'>\n                <div class='box'>\n                    <h4 class='title is-4'>Preview</h4>\n                    <iframe *ngIf='p.preview' class='preview-frame' [src]='previewURL | async' [title]='p.title'></iframe>\n                </div>\n            </div>\n        </div>\n    </section>\n</article>","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { BlogService } from '../../../services/blog/blog.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { map, switchMap, share } from 'rxjs/operators';\nimport { PostGraphQL, CategoryGraphQL, TagGraphQL } from '../../../shared/core';\nimport { Observable } from 'rxjs';\n\n@Component({\n    selector: 'app-posts',\n    templateUrl: './posts.component.html',\n    styleUrls: ['./posts.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PostsComponent {\n\n    // Consolidate page data\n    pageData: Observable<any> = this.router.queryParamMap.pipe(\n        map(m => parseInt(m.get('page') || '1')),\n        switchMap(p => this.blog.getBlogPosts(10 * --p)),\n        share()\n    );\n\n    // Get blog posts\n    posts: Observable<PostGraphQL[]> = this.pageData.pipe(map(({data}) => data.allPost));\n\n    // Fetch categories and tags\n    categories: Observable<CategoryGraphQL[]> = this.pageData.pipe(map(({data}) => data.allCategory));\n    tags: Observable<TagGraphQL[]> = this.pageData.pipe(map(({data}) => data.allTags));\n\n    constructor(\n        private blog: BlogService,\n        private router: ActivatedRoute\n    ) { }\n\n}\n","<app-navbar color='black'></app-navbar>\n\n<section class='section'>\n    <div class='container'>\n        <h1 class='title is-8'>Latest Articles</h1>\n\n        <div class='columns is-centered'>\n            <div class='column is-one-fifth'>\n                <aside class='menu'>\n                    <p class='menu-label'>Categories</p>\n                    <ul class='menu-list'>\n                        <li *ngFor='let c of categories | async'>\n                            <a [routerLink]=\"['category', c.title]\">{{ c.title }}</a>\n                        </li>\n                    </ul>\n                    <p class='menu-label is-hidden-mobile'>Tags</p>\n                    <ul class='menu-list is-hidden-mobile'>\n                        <li *ngFor='let t of tags | async'>\n                            <a [routerLink]=\"['tag', t.slug.current]\">{{ t.title | titlecase }}</a>\n                        </li>\n                    </ul>\n                </aside>\n            </div>\n\n            <div class='column is-three-fifths'>\n                <article class='card' *ngFor='let p of posts | async'>\n                    <div class='card-image'>\n                        <a [routerLink]=\"['article', p.slug.current]\">\n                            <figure class='image'>\n                                <img class='post-media' [src]='p.mainImage.asset.url + \"?h=500\"' [alt]='p.title'>\n                            </figure>\n                        </a>\n                    </div>\n\n                    <div class=\"card-content\">\n                        <div class=\"media\">\n                            <div class=\"media-content\">\n                                <p>\n                                    <a class=\"title is-4 split-text\" [routerLink]=\"['article', p.slug.current]\">\n                                        <span>{{ p.title }}</span>\n                                        <i class=\"fas fa-arrow-right\"></i>\n                                    </a>\n                                </p>\n                                <p>\n                                    <a class=\"subtitle is-6\" [routerLink]=\"['author', p.author.slug.current]\">\n                                        {{ p.author.name }}\n                                    </a>\n                                </p>\n                            </div>\n                        </div>\n\n                        <div class=\"content\">\n                            <p class='subtitle is-6'>\n                                {{ p.excerpt }}\n                                <br />\n                            </p>\n                            <time class='subtitle is-6' [dateTime]=\"p.publishedAt\">\n                                {{ p.publishedAt | date:'mediumDate' }}\n                            </time>\n                            <br /><br />\n                            <p>\n                                <a class='subtitle is-7 has-text-grey' *ngFor='let t of p.tags; let i = index' [routerLink]=\"['tag', t.slug.current]\">\n                                    {{ t.title | titlecase }}<ng-container *ngIf='i < (p.tags.length-1)'>,</ng-container>\n                                </a>\n                            </p>\n                        </div>\n                    </div>\n                </article>\n            </div>\n\n            <div class='column is-one-fifth'></div>\n        </div>\n    </div>\n</section>","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SearchComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>search works!</p>\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Apollo } from 'apollo-angular';\nimport { ApolloQueryResult } from 'apollo-client';\nimport { BlogPostsPage, BlogPostPage, BlogAuthorPage } from '../../shared/queries';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class BlogService {\n\n    constructor(private apollo: Apollo) { }\n\n    getBlogPosts(offset = 0, limit = 10): Observable<ApolloQueryResult<any>> {\n        return this.apollo.query<any>({\n            query: BlogPostsPage,\n            variables: {offset, limit}\n        });\n    }\n\n    getBlogPost(slug: string): Observable<ApolloQueryResult<any>> {\n        return this.apollo.query<any>({\n            query: BlogPostPage,\n            variables: {slug}\n        });\n    }\n\n    getBlogAuthor(slug: string): Observable<ApolloQueryResult<any>> {\n        return this.apollo.query<any>({\n            query: BlogAuthorPage,\n            variables: {slug}\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Title, Meta } from '@angular/platform-browser';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SEOService {\n\n    constructor(\n        private title: Title,\n        private meta: Meta\n    ) { }\n\n    setTitle(title: string): void {\n        this.title.setTitle(title);\n\n        this.meta.updateTag({\n            name: 'twitter:title',\n            content: title\n        }, `name='twitter:title'`);\n    }\n\n    setDescription(description: string): void {\n        this.meta.updateTag({\n            name: 'description',\n            content: description\n        }, `name='description'`);\n\n        this.meta.updateTag({\n            name: 'twitter:description',\n            content: description\n        }, `name='twitter:description'`);\n    }\n\n    setMetaImage(imageUrl: string): void {\n        this.meta.updateTag({\n            name: 'twitter:image',\n            content: imageUrl\n        }, `name='twitter:image'`);\n    }\n}\n"]}